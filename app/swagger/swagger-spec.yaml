openapi: 3.0.0
paths:
  /api:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /api/todos:
    post:
      operationId: TodosController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoDto'
      responses:
        '201':
          description: タスク作成完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTodoResponseDto'
        '400':
          description: 入力値のフォーマットエラー
        '500':
          description: DBサーバ接続エラー
      tags: &ref_0
        - todos
    get:
      operationId: TodosController_findAll
      parameters: []
      responses:
        '200':
          description: タスク一覧取得完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindTodoListResponseDto'
      tags: *ref_0
  /api/todos/{id}:
    get:
      operationId: TodosController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: タスク単体取得完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindTodoResponseDto'
        '404':
          description: 指定のタスクが存在しない
      tags: *ref_0
    patch:
      operationId: TodosController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoDto'
      responses:
        '200':
          description: タスク更新完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTodoResponseDto'
        '404':
          description: 指定のタスクが存在しない
      tags: *ref_0
    delete:
      operationId: TodosController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: タスク削除完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTodoResponseDto'
        '404':
          description: 指定のタスクが存在しない
      tags: *ref_0
  /api/users:
    post:
      operationId: UsersController_signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpUserDto'
      responses:
        '201':
          description: ユーザー登録完了
        '400':
          description: 入力値のフォーマットエラー
        '409':
          description: メールアドレスの重複エラー
        '500':
          description: DBサーバ接続エラー
      tags: &ref_1
        - users
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_1
  /api/users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      tags: *ref_1
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
info:
  title: API description
  description: ''
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateTodoDto:
      type: object
      properties:
        title:
          type: string
          example: サンプル
          minLength: 2
          maxLength: 25
      required:
        - title
    CreateTodoResponseDto:
      type: object
      properties:
        id:
          type: string
          example: 1
        title:
          type: string
          example: サンプル
          minLength: 2
          maxLength: 25
        createdAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
        updatedAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
      required:
        - id
        - title
        - createdAt
        - updatedAt
    Todo:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        userId:
          type: number
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - title
        - userId
        - createdAt
        - updatedAt
    FindTodoListResponseDto:
      type: object
      properties:
        todos:
          example:
            - id: 1
              title: タスク1
              createdAt: '2021-10-28T08:38:14.237Z'
              updatedAt: '2021-10-28T08:38:14.237Z'
            - id: 2
              title: タスク2
              createdAt: '2021-10-28T08:38:14.237Z'
              updatedAt: '2021-10-28T08:38:14.237Z'
            - id: 3
              title: タスク3
              createdAt: '2021-10-28T08:38:14.237Z'
              updatedAt: '2021-10-28T08:38:14.237Z'
          type: array
          items:
            $ref: '#/components/schemas/Todo'
      required:
        - todos
    FindTodoResponseDto:
      type: object
      properties:
        id:
          type: string
          example: 1
        title:
          type: string
          example: サンプル
          minLength: 2
          maxLength: 25
        createdAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
        updatedAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
      required:
        - id
        - title
        - createdAt
        - updatedAt
    UpdateTodoDto:
      type: object
      properties:
        title:
          type: string
          example: サンプル
          minLength: 2
          maxLength: 25
      required:
        - title
    UpdateTodoResponseDto:
      type: object
      properties:
        id:
          type: string
          example: 1
        title:
          type: string
          example: サンプル
          minLength: 2
          maxLength: 25
        createdAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
        updatedAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
      required:
        - id
        - title
        - createdAt
        - updatedAt
    RemoveTodoResponseDto:
      type: object
      properties:
        title:
          type: string
          example: サンプル
          minLength: 2
          maxLength: 25
        createdAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
        updatedAt:
          type: string
          example: '2021-10-28T08:38:14.237Z'
      required:
        - title
        - createdAt
        - updatedAt
    SignUpUserDto:
      type: object
      properties:
        email:
          type: string
          example: test1@gmail.com
        password:
          type: string
          example: hogehoge
          minLength: 6
          maxLength: 25
      required:
        - email
        - password
    UpdateUserDto:
      type: object
      properties: {}
